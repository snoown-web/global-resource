on:
  workflow_call:
    inputs:
      project-root:
        type: string
    secrets:
      STATIC_HOST:
        required: true
      STATIC_PORT:
        required: true
      STATIC_USER:
        required: true
      STATIC_KEY:
        required: true
      STATIC_ROOT:
        required: true

permissions: read-all

jobs:
  deploy-static:
    runs-on: ubuntu-latest
    timeout-minutes: 4
    env:
      project-root: ${{ secrets.STATIC_USER }}@${{ secrets.STATIC_HOST }}:${{ secrets.STATIC_ROOT }}${{ inputs.project-root }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: if [ -f package-lock.json ]; then npm ci; fi

      - name: Compile the TypeScript files
        run: if [[ -f package-lock.json && -d component ]]; then npx tsc; fi

      - name: Resolve and compress JavaScript files
        run: if [[ -f package-lock.json && -d component ]]; then npx importmap-resolver component/ --minify --ecma=2022; fi

      - name: Compile and compress the Sass files
        run: if [[ -f package-lock.json && -d style ]]; then npx sass style/ --style=compressed --no-source-map; fi

      - name: Prepare the private key file
        run: |
          touch private.key
          chmod 600 $_
          echo '${{ secrets.STATIC_KEY }}' > $_

      - name: Transfer the component directory
        run: if [ -d component ]; then rsync -cr
          --include='*/' --include='*.js' --include='*.html' --exclude='*'
          -e 'ssh -p ${{ secrets.STATIC_PORT }} -i private.key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
          component/ ${{ env.project-root }}component/; fi

      - name: Transfer the style directory
        run: if [ -d style ]; then rsync -cr
          --include='*/' --include='*.css' --exclude='*'
          -e 'ssh -p ${{ secrets.STATIC_PORT }} -i private.key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
          style/ ${{ env.project-root }}style/; fi

      - name: Transfer the icon directory
        run: if [ -d icon ]; then rsync -cr
          --include='*/' --include='*.svg' --include='*.png' --exclude='*'
          -e 'ssh -p ${{ secrets.STATIC_PORT }} -i private.key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
          icon/ ${{ env.project-root }}icon/; fi

      - name: Transfer the page directory
        run: if [ -d page ]; then rsync -cr
          --include='*/' --include='*.html' --exclude='*'
          -e 'ssh -p ${{ secrets.STATIC_PORT }} -i private.key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
          page/ ${{ env.project-root }}; fi
